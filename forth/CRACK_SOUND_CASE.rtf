{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww15260\viewh15800\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs32 \cf2 \expnd0\expndtw0\kerning0
HOW TO DECODE THE (SOUND) WORD LOGIC:\
=====================================\
OBSERVE THE BEHAVIOR:\
- NOT ALL SOUNDS ARE ENABLED UPON BOOT.  PRESS CONTROL-N TO CHANGE SOUND MODE.\
  THE KEYPRESS SOUND IS MUTED UNLESS THE USER CHANGES THE SOUND MODE.\
  MODES: 8 SOUNDS, 6 SOUNDS, 3 SOUNDS, ALL MUTE\
- VARIABLE MUFF IS AT 27719 (MUFF .)\
- SET SOUND MODE TO 8 SOUNDS, THEN LISTEN TO EACH SOUND\
- READ THE CODE, LOOK AT CODE FOR CONTROL STRUCTURES, WRITE PSEUDO CODE\
\
6C6A : (SOUND) 					\\ SOUND NUMBER (1-5) COMES IN ON THE STACK\
DUP MUFF @ < 0BRANCH 00AA			\\ DETERMINE IF SOUND SHOULD BE MADE OR NOT (MUFFLED)\
0 SWAP SDUP 						\\ SWITCH - CASE STRUCTURE.  STACK HAS 0, SOUND#, SOUND#\
\
0 = EH? 0BRANCH 000C 				\\ IF SOUND# NOT 0 SKIP TO NEXT CHECK\
LIT 0007 EMIT BRANCH 008C 			\\ BEEP AND JUMP TO END OF CASE STRUCTURE\
\
1 = EH? 0BRANCH 000A 				\\ IF SOUND# NOT 1 SKIP TO NEXT CHECK\
CLUCK 1+ BRANCH 007A 				\\ SOUND 1 IS A CLUCK\
\
2 = EH? 0BRANCH 000A \
CLACK 1+ BRANCH 0068 				\\ SOUND 2 IS A CLACK\
\
3 = EH? 0BRANCH 000E \
0 2 UP- SWEEP BRANCH 0052 			\\ SOUND 3 IS A SWEEP UP\
\
LIT 0004 = EH? 0BRANCH 0010 \
LIT 0046 1 UP- SWEEP BRANCH 0038 	\\ SOUND 4 IS A SHORT SWEEP UP\
\
LIT 0005 = EH? 0BRANCH 000E \
0 2 DWN- SWEEP BRANCH 0020 		\\ SOUND 5 IS A SWEEP DOWN\
\
DROP LIT 0005 LIT 0014 OSC 		\\ SOUNDS 6 AND 7 START WITH THIS OSCILLATOR\
\
LIT 0007 = 0BRANCH 0008 			\\ SKIP IF NOT SOUND 7\
\
PAUSE CLUCK 1+ 1+ 					\\ SOUND 7 ADDS A CLUCK\
\
BRANCH 0006 						\\ CASES 0-7 END UP HERE AND JUMP TO THE EXIT\
DROP 0 								\\ MUFFLED SOUNDS GO HERE- CLEAN UP STACK		\
;S							\
\
RELATED WORDS:\
==============\
618E : DEFAULT 					\\ NO MATCH FOUND IN A CASE STATEMENT \
CASES @ \
DUP 0BRANCH 0010 \
0 (DO) THEN (LOOP) FFFC \
BRANCH 0004 \
DROP\
LIT 0005 ?PAIRS CASES ! ;S\
\
\\ ANOTHER FORM OF THE CASE STATEMENT - NOT SURE WHEN USED\
6176 : CASE> 1 CASES +! COMPILE EH?> IF ;S\
\
615F : CASE \
1 CASES +! 		\\ INCREMENT NUMBER OF CASES\
COMPILE EH? 	\\ ADD LOGIC TO EVALUATE CASE VALUE\
IF 				\\ DO SUBSEQUENT LOGIC ONLY IF CASE MATCHES\
;S				\\ SHOULD HAVE A \'93THEN\'94 AT THE END OF THAT LOGIC\
\
6140 : SWITCH 	\\ NEW SWITCH-CASE STRUCTURE\
	CASES @ 	\\ GET PREVIOUS NUMBER OF CASES ON STACK\
	0 CASES ! 	\\ ZERO OUT THE NUMBER OF CASES\
	LIT 0005 	\\ PUT A 5 ON THE STACK (STATE PARAMETER?)\
	COMPILE SDUP \\ ADD A DUP TO THE WORD BEING COMPILED\
	;S\
\
\\ ANOTHER FORM OF THE EH? STATEMENT - NOT SURE WHEN USED\
6127 : EH?> 0BRANCH 0008 1 BRANCH 0006 DUP 0 ;S\
\
610D : EH? 		\\ COMPILED BY CASE TO EVALUATE THE CONDITION\
0BRANCH 000A	\\ IF FALSE, SKIP TO THE DUP BELOW \
DROP 1 			\\ IF TRUE, REPLACE WITH 1\
BRANCH 0006 	\\ EXIT\
DUP \
0 \
;S\
\
6100 : SDUP DUP ;S		\\ SYNONYM FOR DUP - COMPILED BY SWITCH\
\
60F4 : CASES 0F21		\\ A VARIABLE THAT COUNTS THE NUMBER OF CASES\
\
}